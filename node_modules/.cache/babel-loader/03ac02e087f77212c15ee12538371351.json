{"ast":null,"code":"var _jsxFileName = \"/home/dario/Documents/courses/react/memegenerator/src/components/Meme.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport memesData from \"../memesData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Meme() {\n  _s();\n\n  const [meme, setMeme] = useState({\n    topText: \"\",\n    bottomText: \"\",\n    randomImage: \"http://i.imgflip.com/1bij.jpg\"\n  });\n  const [allMemeImages, setAllMemeImages] = useState(memesData);\n  const [formData, setFormData] = useState({});\n\n  function getMemeImage() {\n    const memesArray = allMemeImages.data.memes;\n    const randomNumber = Math.floor(Math.random() * memesArray.length);\n    const url = memesArray[randomNumber].url;\n    setMeme(prevMeme => ({ ...prevMeme,\n      randomImage: url\n    }));\n  }\n\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setMeme(prevMeme => ({ ...prevMeme,\n      [name]: value\n    }));\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault(); // submitToApi(formData)\n\n    console.log(formData);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        type: \"text\",\n        placeholder: \"Top Text\",\n        name: \"topText\",\n        value: meme.topText,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        type: \"text\",\n        placeholder: \"Bottom Text\",\n        name: \"bottomText\",\n        value: meme.bottomText,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getMemeImage,\n        type: \"submit\",\n        children: \"Get a new meme image \\uD83D\\uDDBC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meme\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: meme.randomImage,\n        className: \"meme--image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"meme--text top\",\n        children: \"One does not simply\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Meme, \"Pw1Mj+h8PsCjkv0SAH3JRrrN9kI=\");\n\n_c = Meme;\n\nvar _c;\n\n$RefreshReg$(_c, \"Meme\");","map":{"version":3,"names":["React","useState","memesData","Meme","meme","setMeme","topText","bottomText","randomImage","allMemeImages","setAllMemeImages","formData","setFormData","getMemeImage","memesArray","data","memes","randomNumber","Math","floor","random","length","url","prevMeme","handleChange","event","name","value","target","handleSubmit","preventDefault","console","log"],"sources":["/home/dario/Documents/courses/react/memegenerator/src/components/Meme.js"],"sourcesContent":["import React,{useState} from \"react\";\nimport memesData from \"../memesData\"\n\nexport default function Meme(){\n    const [meme, setMeme] = useState({\n        topText: \"\",\n        bottomText: \"\",\n        randomImage: \"http://i.imgflip.com/1bij.jpg\"\n    })    \n\n    const [allMemeImages, setAllMemeImages] = useState(memesData)\n\n    const [formData, setFormData] = useState({})\n    \n    function getMemeImage(){\n        const memesArray = allMemeImages.data.memes\n        const randomNumber = Math.floor(Math.random() * memesArray.length)\n        const url = memesArray[randomNumber].url\n        setMeme(prevMeme => ({\n            ...prevMeme,\n            randomImage: url\n        }))\n    }\n\n\n    function handleChange(event) {\n        const {name, value} = event.target\n        setMeme(prevMeme => ({\n            ...prevMeme,\n            [name]: value\n        }))\n    }\n    function handleSubmit(event) {\n        event.preventDefault()\n        // submitToApi(formData)\n        console.log(formData)\n    }\n        \n    return(\n        <main>\n            <form onSubmit={handleSubmit}>\n                <input \n                className=\"input\"\n                type=\"text\" \n                placeholder=\"Top Text\"\n                name=\"topText\"\n                value={meme.topText}\n                onChange={handleChange}\n                />\n                <input \n                className=\"input\"\n                type=\"text\" \n                placeholder=\"Bottom Text\"\n                name=\"bottomText\"\n                value={meme.bottomText}\n                onChange={handleChange}\n                />\n                <button \n                onClick={getMemeImage}               \n                type=\"submit\"\n                >\n                    Get a new meme image ðŸ–¼\n                </button>\n            </form>\n            <div className=\"meme\">\n                <img src={meme.randomImage} className=\"meme--image\" />\n                <h2 className=\"meme--text top\">One does not simply</h2>\n                \n            </div>\n        </main>\n    )\n}"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAOC,SAAP,MAAsB,cAAtB;;AAEA,eAAe,SAASC,IAAT,GAAe;EAAA;;EAC1B,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC;IAC7BK,OAAO,EAAE,EADoB;IAE7BC,UAAU,EAAE,EAFiB;IAG7BC,WAAW,EAAE;EAHgB,CAAD,CAAhC;EAMA,MAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAACC,SAAD,CAAlD;EAEA,MAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;;EAEA,SAASY,YAAT,GAAuB;IACnB,MAAMC,UAAU,GAAGL,aAAa,CAACM,IAAd,CAAmBC,KAAtC;IACA,MAAMC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBN,UAAU,CAACO,MAAtC,CAArB;IACA,MAAMC,GAAG,GAAGR,UAAU,CAACG,YAAD,CAAV,CAAyBK,GAArC;IACAjB,OAAO,CAACkB,QAAQ,KAAK,EACjB,GAAGA,QADc;MAEjBf,WAAW,EAAEc;IAFI,CAAL,CAAT,CAAP;EAIH;;EAGD,SAASE,YAAT,CAAsBC,KAAtB,EAA6B;IACzB,MAAM;MAACC,IAAD;MAAOC;IAAP,IAAgBF,KAAK,CAACG,MAA5B;IACAvB,OAAO,CAACkB,QAAQ,KAAK,EACjB,GAAGA,QADc;MAEjB,CAACG,IAAD,GAAQC;IAFS,CAAL,CAAT,CAAP;EAIH;;EACD,SAASE,YAAT,CAAsBJ,KAAtB,EAA6B;IACzBA,KAAK,CAACK,cAAN,GADyB,CAEzB;;IACAC,OAAO,CAACC,GAAR,CAAYrB,QAAZ;EACH;;EAED,oBACI;IAAA,wBACI;MAAM,QAAQ,EAAEkB,YAAhB;MAAA,wBACI;QACA,SAAS,EAAC,OADV;QAEA,IAAI,EAAC,MAFL;QAGA,WAAW,EAAC,UAHZ;QAIA,IAAI,EAAC,SAJL;QAKA,KAAK,EAAEzB,IAAI,CAACE,OALZ;QAMA,QAAQ,EAAEkB;MANV;QAAA;QAAA;QAAA;MAAA,QADJ,eASI;QACA,SAAS,EAAC,OADV;QAEA,IAAI,EAAC,MAFL;QAGA,WAAW,EAAC,aAHZ;QAIA,IAAI,EAAC,YAJL;QAKA,KAAK,EAAEpB,IAAI,CAACG,UALZ;QAMA,QAAQ,EAAEiB;MANV;QAAA;QAAA;QAAA;MAAA,QATJ,eAiBI;QACA,OAAO,EAAEX,YADT;QAEA,IAAI,EAAC,QAFL;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAjBJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAyBI;MAAK,SAAS,EAAC,MAAf;MAAA,wBACI;QAAK,GAAG,EAAET,IAAI,CAACI,WAAf;QAA4B,SAAS,EAAC;MAAtC;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAI,SAAS,EAAC,gBAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAzBJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAiCH;;GApEuBL,I;;KAAAA,I"},"metadata":{},"sourceType":"module"}