{"ast":null,"code":"var _jsxFileName = \"/home/dario/Documents/courses/react/memegenerator/src/components/Meme.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport memesData from \"../memesData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Meme() {\n  _s();\n\n  const [meme, setMeme] = useState({\n    topText: \"\",\n    bottomText: \"\",\n    randomImage: \"http://i.imgflip.com/1bij.jpg\"\n  });\n  const [allMemes, setAllMemes] = useState(memesData);\n  useEffect(function () {\n    fetch(\"https://api.imgflip.com/get_memes\").then(response => response.json()).then(data => setAllMemes(data.data.memes));\n  }, []); // console.log(allMemes)\n\n  function getMemeImage() {\n    const randomNumber = Math.floor(Math.random() * allMemes.length);\n    const url = allMemes[randomNumber].url;\n    setMeme(prevMeme => ({ ...prevMeme,\n      randomImage: url\n    }));\n  }\n\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setMeme(prevMeme => ({ ...prevMeme,\n      [name]: value\n    }));\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault(); // submitToApi(formData)\n\n    console.log(allMemes);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        type: \"text\",\n        placeholder: \"Top Text\",\n        name: \"topText\",\n        value: meme.topText,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        type: \"text\",\n        placeholder: \"Bottom Text\",\n        name: \"bottomText\",\n        value: meme.bottomText,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getMemeImage,\n        type: \"submit\",\n        children: \"Get a new meme image \\uD83D\\uDDBC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meme\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: meme.randomImage,\n        className: \"meme--image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"meme--text top\",\n        children: meme.topText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"meme--text bottom\",\n        children: meme.bottomText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Meme, \"GppSbAA8ZwY+8t5d4rseudMdpww=\");\n\n_c = Meme;\n\nvar _c;\n\n$RefreshReg$(_c, \"Meme\");","map":{"version":3,"names":["React","useState","useEffect","memesData","Meme","meme","setMeme","topText","bottomText","randomImage","allMemes","setAllMemes","fetch","then","response","json","data","memes","getMemeImage","randomNumber","Math","floor","random","length","url","prevMeme","handleChange","event","name","value","target","handleSubmit","preventDefault","console","log"],"sources":["/home/dario/Documents/courses/react/memegenerator/src/components/Meme.js"],"sourcesContent":["import React,{useState, useEffect} from \"react\";\nimport memesData from \"../memesData\"\n\nexport default function Meme(){\n\n    const [meme, setMeme] = useState({\n        topText: \"\",\n        bottomText: \"\",\n        randomImage: \"http://i.imgflip.com/1bij.jpg\"\n    })    \n\n    const [allMemes, setAllMemes] = useState(memesData)\n    \n    useEffect(function(){\n        fetch(\"https://api.imgflip.com/get_memes\")\n            .then(response => response.json())\n            .then(data => setAllMemes(data.data.memes))\n    }, [])\n    // console.log(allMemes)\n    function getMemeImage(){\n        \n        const randomNumber = Math.floor(Math.random() * allMemes.length)\n        const url = allMemes[randomNumber].url\n        setMeme(prevMeme => ({\n            ...prevMeme,\n            randomImage: url\n        }))\n    }\n\n    function handleChange(event) {\n        const {name, value} = event.target\n        setMeme(prevMeme => ({\n            ...prevMeme,\n            [name]: value\n        }))\n    }\n\n    function handleSubmit(event) {\n        event.preventDefault()\n        // submitToApi(formData)\n        console.log(allMemes)\n    }\n        \n    return(\n        <main>\n            <form onSubmit={handleSubmit}>\n                <input \n                className=\"input\"\n                type=\"text\" \n                placeholder=\"Top Text\"\n                name=\"topText\"\n                value={meme.topText}\n                onChange={handleChange}\n                />\n                <input \n                className=\"input\"\n                type=\"text\" \n                placeholder=\"Bottom Text\"\n                name=\"bottomText\"\n                value={meme.bottomText}\n                onChange={handleChange}\n                />\n                <button \n                onClick={getMemeImage}               \n                type=\"submit\"\n                >\n                    Get a new meme image ðŸ–¼\n                </button>\n            </form>\n            <div className=\"meme\">\n                <img src={meme.randomImage} className=\"meme--image\" />\n                <h2 className=\"meme--text top\">{meme.topText}</h2>\n                <h2 className=\"meme--text bottom\">{meme.bottomText}</h2>\n            </div>\n        </main>\n    )\n}"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,OAAOC,SAAP,MAAsB,cAAtB;;AAEA,eAAe,SAASC,IAAT,GAAe;EAAA;;EAE1B,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC;IAC7BM,OAAO,EAAE,EADoB;IAE7BC,UAAU,EAAE,EAFiB;IAG7BC,WAAW,EAAE;EAHgB,CAAD,CAAhC;EAMA,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAACE,SAAD,CAAxC;EAEAD,SAAS,CAAC,YAAU;IAChBU,KAAK,CAAC,mCAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,IAAI,IAAIL,WAAW,CAACK,IAAI,CAACA,IAAL,CAAUC,KAAX,CAF7B;EAGH,CAJQ,EAIN,EAJM,CAAT,CAV0B,CAe1B;;EACA,SAASC,YAAT,GAAuB;IAEnB,MAAMC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBZ,QAAQ,CAACa,MAApC,CAArB;IACA,MAAMC,GAAG,GAAGd,QAAQ,CAACS,YAAD,CAAR,CAAuBK,GAAnC;IACAlB,OAAO,CAACmB,QAAQ,KAAK,EACjB,GAAGA,QADc;MAEjBhB,WAAW,EAAEe;IAFI,CAAL,CAAT,CAAP;EAIH;;EAED,SAASE,YAAT,CAAsBC,KAAtB,EAA6B;IACzB,MAAM;MAACC,IAAD;MAAOC;IAAP,IAAgBF,KAAK,CAACG,MAA5B;IACAxB,OAAO,CAACmB,QAAQ,KAAK,EACjB,GAAGA,QADc;MAEjB,CAACG,IAAD,GAAQC;IAFS,CAAL,CAAT,CAAP;EAIH;;EAED,SAASE,YAAT,CAAsBJ,KAAtB,EAA6B;IACzBA,KAAK,CAACK,cAAN,GADyB,CAEzB;;IACAC,OAAO,CAACC,GAAR,CAAYxB,QAAZ;EACH;;EAED,oBACI;IAAA,wBACI;MAAM,QAAQ,EAAEqB,YAAhB;MAAA,wBACI;QACA,SAAS,EAAC,OADV;QAEA,IAAI,EAAC,MAFL;QAGA,WAAW,EAAC,UAHZ;QAIA,IAAI,EAAC,SAJL;QAKA,KAAK,EAAE1B,IAAI,CAACE,OALZ;QAMA,QAAQ,EAAEmB;MANV;QAAA;QAAA;QAAA;MAAA,QADJ,eASI;QACA,SAAS,EAAC,OADV;QAEA,IAAI,EAAC,MAFL;QAGA,WAAW,EAAC,aAHZ;QAIA,IAAI,EAAC,YAJL;QAKA,KAAK,EAAErB,IAAI,CAACG,UALZ;QAMA,QAAQ,EAAEkB;MANV;QAAA;QAAA;QAAA;MAAA,QATJ,eAiBI;QACA,OAAO,EAAER,YADT;QAEA,IAAI,EAAC,QAFL;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAjBJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAyBI;MAAK,SAAS,EAAC,MAAf;MAAA,wBACI;QAAK,GAAG,EAAEb,IAAI,CAACI,WAAf;QAA4B,SAAS,EAAC;MAAtC;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAI,SAAS,EAAC,gBAAd;QAAA,UAAgCJ,IAAI,CAACE;MAArC;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGI;QAAI,SAAS,EAAC,mBAAd;QAAA,UAAmCF,IAAI,CAACG;MAAxC;QAAA;QAAA;QAAA;MAAA,QAHJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAzBJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAiCH;;GAzEuBJ,I;;KAAAA,I"},"metadata":{},"sourceType":"module"}