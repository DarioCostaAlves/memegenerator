{"ast":null,"code":"var _jsxFileName = \"/home/dario/Documents/courses/react/memegenerator/src/components/Meme.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport memesData from \"../memesData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Meme() {\n  _s();\n\n  const [meme, setMeme] = useState({\n    topText: \"\",\n    bottomText: \"\",\n    randomImage: \"http://i.imgflip.com/1bij.jpg\"\n  });\n  const [allMemeImages, setAllMemeImages] = useState(memesData);\n\n  function getMemeImage() {\n    const memesArray = allMemeImages.data.memes;\n    const randomNumber = Math.floor(Math.random() * memesArray.length);\n    const url = memesarray[randomNumber].url;\n    setMeme(prevMeme => ({ ...prevMeme,\n      randomImage: url\n    }));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        type: \"text\",\n        placeholder: \"Top Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        type: \"text\",\n        placeholder: \"Bottom Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getMemeImage,\n        type: \"submit\",\n        children: \"Get a new meme image \\uD83D\\uDDBC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: meme.randomImage,\n      className: \"meme--image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Meme, \"5UBB9YRk0/Y87S9l2uP7qfvk9+M=\");\n\n_c = Meme;\n\nvar _c;\n\n$RefreshReg$(_c, \"Meme\");","map":{"version":3,"names":["React","useState","memesData","Meme","meme","setMeme","topText","bottomText","randomImage","allMemeImages","setAllMemeImages","getMemeImage","memesArray","data","memes","randomNumber","Math","floor","random","length","url","memesarray","prevMeme"],"sources":["/home/dario/Documents/courses/react/memegenerator/src/components/Meme.js"],"sourcesContent":["import React,{useState} from \"react\";\nimport memesData from \"../memesData\"\n\nexport default function Meme(){\n    const [meme, setMeme] = useState({\n        topText: \"\",\n        bottomText: \"\",\n        randomImage: \"http://i.imgflip.com/1bij.jpg\"\n    })    \n\n    const [allMemeImages, setAllMemeImages] = useState(memesData)\n    \n    function getMemeImage(){\n        const memesArray = allMemeImages.data.memes\n        const randomNumber = Math.floor(Math.random() * memesArray.length)\n        const url = memesarray[randomNumber].url\n        setMeme(prevMeme => ({\n            ...prevMeme,\n            randomImage: url\n        }))\n    }\n    return(\n        <main>\n            <div className=\"form\">\n                <input \n                className=\"input\"\n                type=\"text\" \n                placeholder=\"Top Text\"\n                />\n                <input \n                className=\"input\"\n                type=\"text\" \n                placeholder=\"Bottom Text\"\n                />\n                <button \n                onClick={getMemeImage}               \n                type=\"submit\"\n                >\n                    Get a new meme image ðŸ–¼\n                </button>\n            </div>\n            <img src={meme.randomImage} className=\"meme--image\"/>\n        </main>\n    )\n}"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAOC,SAAP,MAAsB,cAAtB;;AAEA,eAAe,SAASC,IAAT,GAAe;EAAA;;EAC1B,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC;IAC7BK,OAAO,EAAE,EADoB;IAE7BC,UAAU,EAAE,EAFiB;IAG7BC,WAAW,EAAE;EAHgB,CAAD,CAAhC;EAMA,MAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAACC,SAAD,CAAlD;;EAEA,SAASS,YAAT,GAAuB;IACnB,MAAMC,UAAU,GAAGH,aAAa,CAACI,IAAd,CAAmBC,KAAtC;IACA,MAAMC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBN,UAAU,CAACO,MAAtC,CAArB;IACA,MAAMC,GAAG,GAAGC,UAAU,CAACN,YAAD,CAAV,CAAyBK,GAArC;IACAf,OAAO,CAACiB,QAAQ,KAAK,EACjB,GAAGA,QADc;MAEjBd,WAAW,EAAEY;IAFI,CAAL,CAAT,CAAP;EAIH;;EACD,oBACI;IAAA,wBACI;MAAK,SAAS,EAAC,MAAf;MAAA,wBACI;QACA,SAAS,EAAC,OADV;QAEA,IAAI,EAAC,MAFL;QAGA,WAAW,EAAC;MAHZ;QAAA;QAAA;QAAA;MAAA,QADJ,eAMI;QACA,SAAS,EAAC,OADV;QAEA,IAAI,EAAC,MAFL;QAGA,WAAW,EAAC;MAHZ;QAAA;QAAA;QAAA;MAAA,QANJ,eAWI;QACA,OAAO,EAAET,YADT;QAEA,IAAI,EAAC,QAFL;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAXJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAmBI;MAAK,GAAG,EAAEP,IAAI,CAACI,WAAf;MAA4B,SAAS,EAAC;IAAtC;MAAA;MAAA;MAAA;IAAA,QAnBJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAuBH;;GAzCuBL,I;;KAAAA,I"},"metadata":{},"sourceType":"module"}